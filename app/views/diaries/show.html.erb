<style>
   /* Set the size of the div element that contains the map */
  #map {
    height: 400px;
    width: 500px;
   }
</style>

<!--The div elements for the map and message -->
<div id="map"></div>
<div id="msg"></div>
<script>
// 初期マップの設定
var map;
function haversine_distance(mk1, mk2) {
    var R = 6371.0710; // Radius of the Earth in kilometers
    var rlat1 = mk1.position.lat() * (Math.PI/180);
     // Convert degrees to radians
    var rlat2 = mk2.position.lat() * (Math.PI/180);
     // Convert degrees to radians
    var difflat = rlat2-rlat1; // Radian difference (latitudes)
    var difflon = (mk2.position.lng()-mk1.position.lng())
                * (Math.PI/180); // Radian difference (longitudes)

    var d = 2 * R
    * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)
    +Math.cos(rlat1)*Math.cos(rlat2)
    *Math.sin(difflon/2)*Math.sin(difflon/2)));
    return d;
}
function initMap() {
  // The map, centered on Central Park
  const center = {lat: <%= @pin.latitude %>, lng:<%= @pin.longitude %> };
  const options = {zoom: 15, scaleControl: true, center: center};
  map = new google.maps.Map(
      document.getElementById('map'), options);
  // Locations of landmarks
  let road_pin = []
  let mk = []
  <% @pins.each_with_index do |pin,index| %>
    road_pin[<%= index %>] = {lat: <%= pin.latitude %>, lng: <%= pin.longitude %>};

  // The markers for The Dakota and The Frick Collection
    mk[<%= index %>] = new google.maps.Marker({position: road_pin[<%= index %>], map: map});

    <% if index != 0 %>
      new google.maps.Polyline({path: [road_pin[<%= index %>], road_pin[<%= index - 1 %>]], map: map});

      var distance = haversine_distance(mk[<%= index %>], mk[<%= index - 1 %>]);
      document.getElementById('msg').innerHTML
        = "散歩の距離: " + distance.toFixed(2)*1000 + " m";
    <% end %>
  <% end %>

}
</script>


    <!--Load the API from the specified URL --
    <remember to replace YOUR_API_KEY-->
<script src="https://maps.googleapis.com/maps/api/js?
key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer>
</script>




<% @strolls.each do |stroll| %>
  <%= stroll.start_time.strftime("%H:%M") %>
  <%= stroll.end_time.strftime("%H:%M") %>
  <%= stroll.vitality_condition_i18n %>
  <%= stroll.my_dog.name%>ちゃん
  <%= stroll.road %>
  <%= stroll.distance %>m
  <%= stroll.speed %>m/分
  <%= stroll.memo %>



  <%= link_to "散歩ルートを登録する", new_pin_path(stroll_id: stroll.id) %>
<% end %>

<h1><%= @diary.diary_date %>の日記</h1>

<%= image_tag @diary.my_dog.get_dog_image(80,80) %>
<%= @diary.my_dog.name %>ちゃん
<p>今日のひとこと</p>
<%= @diary.memo %>
<%= image_tag('food.png') %>
<p>食欲</p>
<%= @diary.appetite_i18n %>
<%= image_tag('dooky.png') %>
<p>排せつ</p>
<%= @diary.excreta_i18n %>

<%= link_to "内容を変更する", edit_diary_path(@diary.id) %>


<p>写真一覧</p>
<% if @photos.present? %>
  <% @photos.each do |photo| %>
  <!--写真詳細画面へ遷移する-->
    <%= link_to photo_path(photo.id) do %>
      <%= image_tag photo.get_image(100,100) %>
      <%= photo.title %>
    <% end %>
  <% end %>
<% else %>
  <p>写真がありません</p>
<% end %>


<p>写真の追加</p>
<%= form_with model: @photo do |f| %>
  <div>
    <p>タイトル</p>
    <%= f.text_field :title %>
    <p>コメント</p>
    <%= f.text_area :body %>
    <p>写真</p>
    <%= f.file_field :image, accept: "image/*" %>
    <%= f.hidden_field :diary_id, :value => @diary.id %>
    <%= f.hidden_field :my_dog_id, :value => @diary.my_dog.id %>
    <%= f.submit "保存" %>
  </div>
<% end %>